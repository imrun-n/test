[{"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/index.js":"1","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/App.jsx":"2","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Explore.jsx":"3","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Navbar.jsx":"4","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/NewPassword.jsx":"5","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Home.jsx":"6","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/SignUp.jsx":"7","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Payment.jsx":"8","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Login.jsx":"9","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Logout.jsx":"10","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/ResetPass.jsx":"11","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Footer.jsx":"12","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/StartACampaign.jsx":"13","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/WhatWeDo.jsx":"14","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Profile.jsx":"15","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/CampaignDetails.jsx":"16","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/reducer/UseReducer.jsx":"17","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/HeroSection.jsx":"18","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/CardView.jsx":"19","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/Funding.jsx":"20","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/Contents.jsx":"21","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/BasicStep.jsx":"22"},{"size":707,"mtime":1622917239000,"results":"23","hashOfConfig":"24"},{"size":2175,"mtime":1626428002282,"results":"25","hashOfConfig":"24"},{"size":1047,"mtime":1624736041000,"results":"26","hashOfConfig":"24"},{"size":7576,"mtime":1624744447000,"results":"27","hashOfConfig":"24"},{"size":3085,"mtime":1622917239000,"results":"28","hashOfConfig":"24"},{"size":2370,"mtime":1624743166000,"results":"29","hashOfConfig":"24"},{"size":11419,"mtime":1627375007984,"results":"30","hashOfConfig":"24"},{"size":4948,"mtime":1624766359796,"results":"31","hashOfConfig":"24"},{"size":4168,"mtime":1624611999000,"results":"32","hashOfConfig":"24"},{"size":913,"mtime":1624612798000,"results":"33","hashOfConfig":"24"},{"size":2481,"mtime":1622917239000,"results":"34","hashOfConfig":"24"},{"size":2252,"mtime":1624564604000,"results":"35","hashOfConfig":"24"},{"size":7606,"mtime":1624770832005,"results":"36","hashOfConfig":"24"},{"size":1597,"mtime":1624770946264,"results":"37","hashOfConfig":"24"},{"size":5605,"mtime":1626428002282,"results":"38","hashOfConfig":"24"},{"size":12372,"mtime":1627374759151,"results":"39","hashOfConfig":"24"},{"size":170,"mtime":1624611999000,"results":"40","hashOfConfig":"24"},{"size":1878,"mtime":1624742844000,"results":"41","hashOfConfig":"24"},{"size":1225,"mtime":1624770503447,"results":"42","hashOfConfig":"24"},{"size":1761,"mtime":1624602611000,"results":"43","hashOfConfig":"24"},{"size":2540,"mtime":1624602611000,"results":"44","hashOfConfig":"24"},{"size":2527,"mtime":1624772069384,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jvvdzl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/index.js",[],["104","105"],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/App.jsx",[],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Explore.jsx",["106","107","108"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport './CampaignDetails.css';\nimport './Discussion.css';\n\n\nconst Explore = () => {\n\n\n\n    const [projectProfile, setProjectProfile] = useState([]);\n    const { type } = useParams();\n\n    const history = useHistory();\n\n\n\n\n    const callexplorepage = async () => {\n\n        fetch(`/projectdetails/${type}`, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }\n        ).then(res => res.json())\n            .then(result => {\n                console.log(result)\n\n\n                setProjectProfile(result)\n                console.log(projectProfile)\n            })\n    }\n\n\n\n    useEffect(() => {\n        callexplorepage();\n\n    }, []);\n\n\n    return (\n        <>\n            <h1>hello</h1>\n\n        </>\n    );\n};\n\nexport default Explore;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Navbar.jsx",["109","110"],"import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from './App';\nimport CardView from './CardView';\n\nimport M from 'materialize-css'\n\nconst Navbar = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [search, setSearch] = useState('')\n    const [projectDetails, setProjectDetails] = useState([])\n    const searchModal = useRef(null)\n\n    const RenderMenu = () => {\n        if (state) {\n            return (\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    {/* <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li> */}\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                        Start a Campaign</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/logout\" className=\"nav-link\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                        Logout</NavLink></li>\n\n                </>\n            )\n        }\n        else {\n            return (\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    {/* <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li> */}\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link text-design\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                        Start a Campaign</NavLink></li>\n\n\n                    <li className=\"nav-item\"><NavLink to=\"/login\" className=\"nav-link text-design\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                        Login</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/signup\" className=\"nav-link text-design\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                        Sign Up</NavLink></li>\n\n                </>\n            )\n        }\n    }\n\n\n\n    const fetchProject = (query) => {\n        setSearch(query)\n        fetch('/search-project', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query\n            })\n        }).then(res => res.json())\n            .then(results => {\n                setProjectDetails(results.project)\n                console.log(results.project)\n                console.log(projectDetails)\n            })\n    }\n\n\n    useEffect(() => {\n        M.Modal.init(searchModal.current)\n    }, []);\n\n\n    const clearmethod = () => {\n        setSearch('');\n        setProjectDetails([]);\n    }\n\n\n\n\n\n    return (\n        <>\n            <div clasName=\"container-fluid nav_bg\" id=\"nav\">\n                <div className=\"row\">\n                    <div className=\"col-12 mx-auto\">\n\n                        <nav className=\"navbar navbar-expand-lg bg-dark fixed-top\" id=\"ftco-navbar\">\n                            <div className=\"container-fluid\">\n                                <NavLink className=\"navbar-brand\" to=\"/\" style={{ fontFamily: \"montserrat\", fontSize: \"22px\", letterSpacing: \"1px\" }}>\n                                    Crowdfunding\n\n                                </NavLink>\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                    <span className=\"oi oi-menu text-design\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}></span> Menu\n                                </button>\n\n                                <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\n\n\n                                    <i data-target=\"modal1\" className=\"large material-icons modal-trigger\" style={{ marginLeft: \"10px\" }}>search</i>\n\n\n                                    <ul className=\"navbar-nav ml-auto\">\n\n                                        <li className=\"nav-item dropdown\">\n                                            <a className=\"nav-link dropdown-toggle text-design\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\" style={{ fontFamily: \"montserrat\", fontSize: \"20px\", letterSpacing: \"1px\" }}>\n                                                Explore\n                                            </a>\n\n                                            <ul className=\"dropdown-menu bg-dark\" aria-labelledby=\"navbarDropdown\" >\n                                                <li><a className=\"dropdown-item text-design\" href=\"/explore\">Tech & Innovation</a></li>\n                                                <li><a className=\"dropdown-item text-design\" href=\"/explore\">Creative Work</a></li>\n                                                <li><hr className=\"dropdown-divider text-design\" /></li>\n                                                <li><a className=\"dropdown-item text-design\" href=\"/explore\">Community Project</a></li>\n                                            </ul>\n                                        </li>\n\n                                        <RenderMenu />\n\n\n\n\n\n\n\n                                    </ul>\n                                </div>\n                            </div>\n                            <div id=\"modal1\" class=\"modal\" ref={searchModal} style={{ color: \"black\", width: \"500px\", maxHeight: \" 500px\", overflowY: \"auto\" }}>\n                                <div className=\"modal-content\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"search projects\"\n                                        value={search}\n                                        onChange={(e) => fetchProject(e.target.value)}\n                                    />\n\n                                    <ul className=\"collection\">\n\n                                        {\n                                            projectDetails.map(item => {\n                                                return (\n                                                    <>\n\n                                                        <li class=\"collection-item avatar\">\n\n                                                            <CardView item={item} />\n                                                        </li>\n\n                                                    </>\n\n                                                )\n                                            })\n                                        }\n\n                                    </ul>\n\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={clearmethod} style={{ fontFamily: \"montserrat\", fontSize: \"25px\", letterSpacing: \"1px\" }}>close</button>\n                                </div>\n                            </div>\n\n\n                        </nav>\n\n\n\n                    </div>\n                </div>\n            </div>\n\n\n\n        </>\n    );\n};\n\n\nexport default Navbar;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/NewPassword.jsx",["111","112","113"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst NewPassword = () => {\n\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\");\n    const [cpassword, setCpassword] = useState(\"\");\n    const { token } = useParams();\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n\n        try {\n\n            const res = await fetch(\"/new-password\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password, cpassword, token\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset password successful\");\n                console.log(\"reset password successful\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                    <i className=\"fa fa-check\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"cpassword\" value={cpassword} onChange={(e) => setCpassword(e.target.value)} placeholder=\"Confirm Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default NewPassword;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Home.jsx",["114"],"import React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport HeroSection from './HeroSection'\nimport CardView from './CardView'\nimport { useHistory } from 'react-router-dom';\n//import { Route } from 'react-router';\n\nconst Home = () => {\n\n    const history = useHistory();\n    const [userData, setuserData] = useState([]);\n    let data;\n\n    const callHomePage = async () => {\n        try {\n            const res = await fetch('/allproject', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n            //console.log(res);\n\n            data = await res.json();\n            console.log(data.project);\n            setuserData(data.project);\n            console.log(userData)\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        callHomePage();\n\n    }, []);\n\n\n\n\n\n\n\n\n\n    return (\n        <>\n            {userData ?\n                <div className=\"container mt-5\">\n                    <div>\n                    <HeroSection />\n                    </div>\n                    <br/>\n                    <div style={{marginTop: \"20px\"}}>\n                        <h2 style={{ \"color\": \"#ff00ff\" }}>Available Campaigns</h2>\n                    </div>\n                    <br />\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {\n                                userData.map(item => {\n                                    return (\n                                        <>\n                                            <div className=\"col-sm\">\n                                                <CardView item={item} />\n                                            </div>\n\n\n                                        </>\n\n                                    )\n                                })\n                            }\n\n                        </div>\n                    </div>\n\n                </div>\n                : <h6>Lodding</h6>}\n\n\n        </>\n    );\n};\n\nexport default Home;\n\n","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/SignUp.jsx",["115","116","117","118","119","120"],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Payment.jsx",["121","122","123","124","125"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport './CampaignDetails.css';\nimport './payment.css'\nimport './Discussion.css';\nimport StripeCheckout from \"react-stripe-checkout\";\n\n\nconst Payment = () => {\n\n    const { id } = useParams();\n    const history = useHistory();\n    const [userData, setuserData] = useState({});\n    const [project, setProject] = useState({});\n    const [backamount, setBackamaount] = useState(\"\");\n    let data, data1;\n\n    const [name1, setName] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [productBy, setProductBy] = useState(\"\");\n    const [backer, setBacker] = useState(\"\");\n\n\n    const calluserdataretrive = async () => {\n        try {\n            const res = await fetch('/what-we-do', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n\n            const res1 = await fetch(`/projectdetails/${id}/payment`, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n\n            });\n\n\n            data = await res.json();\n            console.log(data);\n            setuserData(data);\n            setBacker(userData._id)\n            console.log(userData);\n            console.log(userData.email);\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n            data1 = await res1.json();\n            console.log(data1)\n            setProject(data1.myProject)\n            setName(project._id)\n            setPrice(project.amount)\n            //setProductBy(project.postedBy._id)\n            console.log(project)\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        calluserdataretrive();\n\n    }, []);\n\n\n\n\n\n\n\n\n    const makePayment = token => {\n        const body = {\n            token, name1, price, backer, backamount\n        };\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n\n        return fetch(`/payment1`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                console.log(\"RESPONSE \", response);\n                const { status } = response;\n                console.log(\"STATUS \", status);\n            })\n            .catch(error => console.log(error));\n    };\n\n\n    return (\n        <>\n            {project ? <div className=\"container\" style={{ height: \"100vh\" }}>\n                <div className=\"row justify-content-center\">\n                    <div className=\"top-div\" id=\"part\">\n                        <div className=\"left-div\" style={{ marginTop: \"80px\", float: \"left\" }}>\n                            <span>YOU ARE CONTRIBUTING TO</span>\n                            <h3>{project.ctitle}</h3>\n\n                            <div>\n                                <img style={{ width: \"80px\", height: \"80px\", borderRadius: \"40px\", marginRight: \"15px\" }}\n                                    src=\"https://picsum.photos/100\"\n                                />\n                            </div>\n                            <div>\n                                <span id=\"user-name\">{userData.name}</span>\n                                <p>backer </p>\n                                <span id=\"user-name\">{userData.email}</span>\n\n\n                            </div>\n\n                        </div>\n\n                        <div className=\"top-div\">\n                            <div>\n                                <input type=\"number\" name=\"bamount\" onChange={(e) => { setBackamaount(e.target.value) }} placeholder=\"Amount\" />\n                            </div>\n                            <StripeCheckout\n                                stripeKey=\"pk_test_51J6aoDKc0TZv9NwKZZSNcS3gVZ1MwVfm6VKsOo5OCxup4GQjNHXwlZAAK4GQr7QFmtiX8spQdkuqOzeTo5USbSM400IWNwUBtU\"\n                                token={makePayment}\n                                name=\"Buy React\"\n                                amount={backamount * 100}\n                            /* shippingAddress\n                            billingAddress */\n                            >\n                                <button className=\"btn-large blue\">\n                                    Payment\n                                </button>\n                            </StripeCheckout>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                : <h5>Lodding</h5>}\n\n        </>\n    );\n};\n\nexport default Payment;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Login.jsx",["126"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst Login = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //const [allEntry, setAllEntry] = useState([]);\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/signin\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email, password\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 400 || !data) {\n                window.alert(\"Invalid credential\");\n                console.log(\"Invalid credential\");\n            } else {\n                dispatch({ type: \"USER1\", payload: true });\n                window.alert(\"login successful\");\n                console.log(\"login successful\");\n                history.push(\"/\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Log in</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Log in</button>\n                    </div>\n                    <div className=\"clearfix\">\n\n                        <NavLink to=\"/reset-pass\" className=\"float-right\">Forgot Password?</NavLink>\n                    </div>\n                    <div className=\"or-seperator\"><i>or</i></div>\n                    <p className=\"text-center\">Login with your social media account</p>\n                    <div className=\"text-center social-btn\">\n                        <NavLink to=\"/\" className=\"btn btn-secondary\"><i className=\"fa fa-facebook\"></i>&nbsp; Facebook</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-info\"><i className=\"fa fa-twitter\"></i>&nbsp; Twitter</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-danger\"><i className=\"fa fa-google\"></i>&nbsp; Google</NavLink>\n                    </div>\n                </form>\n                <p className=\"text-center text-muted small\">Don't have an account? <NavLink to=\"/signup\">Sign up here!</NavLink></p>\n            </div>\n        </>\n    );\n};\n\nexport default Login;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Logout.jsx",["127"],"import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from './App';\nconst Logout = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    useEffect(() => {\n        fetch('/logout', {\n            method: \"GET\",\n            headers: {\n                Accept: \"appllication/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }).then((res) => {\n            dispatch({ type: \"USER1\", payload: false });\n            history.push('/', { replace: true });\n\n            if (res.status !== 200) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        }).catch((err) => {\n            console.log(err);\n        });\n    });\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Logout;\n","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/ResetPass.jsx",["128","129","130"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst ResetPass = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/reset-pass\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset pass link sen to email\");\n                console.log(\"reset pass link sen to email\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default ResetPass;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Footer.jsx",[],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/StartACampaign.jsx",["131","132","133"],"import React, { useEffect, useState } from 'react';\nimport './StartACampaign.css'\nimport BasicStep from './Steps/BasicStep';\nimport Contents from './Steps/Contents';\nimport Funding from './Steps/Funding';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import { Route } from 'react-router';\n\nconst StartACampaign = () => {\n\n    const history = useHistory();\n    const [values, setValues] = useState({\n        ctitle: \"\",\n        category: \"\",\n        ctagline: \"\",\n        location: \"\",\n        tags: \"\",\n        duration: \"\",\n        story: \"\",\n        amount: \"\",\n        rnumber: \"\",\n        anumber: \"\",\n        re_anumber: \"\",\n        raisedamount: \"0\"\n\n    });\n\n    const [image, setImage] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n\n    const [faqList, setfaqList] = useState([\n        { question: \"\", answer: \"\" }\n\n    ]);\n    const [step, setStep] = useState(1);\n\n    const callLoginPage = async () => {\n\n        try {\n            const res = await fetch('/checklogin', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    // const postDetails=() =>{\n    //    try{\n    //     const imageData = new FormData()\n    //     imageData.append(\"file\", image)\n    //     imageData.append(\"upload_preset\", \"crowdfunding\")\n    //     imageData.append(\"cloud_name\", \"tumpa\")\n    //     const res=await fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n    //         method:\"POST\",\n    //         body:imageData\n    //     });\n    //    imageData = await res.json();\n    //    console.log(imageData);\n\n    //    }\n    //    catch(err){\n    //        console.log(err);\n\n    //    }\n\n    // }\n    const postDetails = () => {\n        const imageData = new FormData()\n        imageData.append(\"file\", image)\n        imageData.append(\"upload_preset\", \"crowdfunding\")\n        imageData.append(\"cloud_name\", \"tumpa\")\n        fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n            method: \"post\",\n            body: imageData\n        })\n            .then(res => res.json())\n            .then(imageData => {\n                setUrl(imageData.url);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n    const PostData = async () => {\n        //e.preventDefault();\n        try {\n\n            const { ctitle, category, ctagline, location, tags, duration, story, amount, rnumber, anumber, re_anumber, raisedamount } = values;\n            const startdate = new Date();\n            const expiredate = new Date();\n\n\n            expiredate.setDate(startdate.getDate() + parseInt(duration));\n\n            const res = await fetch(\"/createproject\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    ctitle, category, ctagline, location, tags, duration, story, amount, raisedamount: amount, rnumber, anumber, re_anumber, faqList, startdate, expiredate, url\n\n\n                })\n\n\n            });\n            const data = await res.json();\n\n            if (res.status === 201) {\n                window.alert(\"Project created\");\n                console.log(\"Project created\");\n                history.push(\"/\");\n\n            } else if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n            else {\n                window.alert(data.error);\n                console.log(\"project is not created\");\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n\n    }\n\n\n\n\n\n    const nextStep = () => {\n        if (step === 1) {\n            if (values.ctitle && values.category && values.ctagline && values.location && values.tags && values.duration) {\n                postDetails();\n                setStep(step + 1);\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        } else if (step === 2) {\n            if (values.story && faqList[0].question && faqList[0].answer) {\n                setStep(step + 1);\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        }\n        else if (step === 3) {\n            if (values.amount && values.rnumber && values.anumber && values.re_anumber) {\n                if (values.anumber === values.re_anumber) {\n                    // console.log(values);\n                    // console.log(faqList);\n                    PostData();\n                }\n                else {\n                    window.alert(\"Account number did not match!\");\n                }\n\n\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        }\n    };\n    const prevStep = () => {\n        if (step > 1) {\n            setStep(step - 1);\n        }\n    };\n\n    const handleChange = (name) => (e) => {\n        setValues({ ...values, [name]: e.target.value });\n    };\n\n\n\n\n    const props = { faqList, setfaqList, values, setValues, image, setImage, handleChange }\n\n\n    useEffect(() => {\n        callLoginPage();\n\n    }, []);\n\n\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-13 col-sm-9 col-md-7 col-lg-6 col-xl-5 text-center p-0 mt-3 mb-2\">\n                    <div className=\"card px-0 pt-4 pb-0 mt-3 mb-3\">\n                        <h2 id=\"heading\">Get Started!</h2>\n                        <p>Fill all form field to go to the next step</p>\n\n                        <div className=\"bg-light vh-200\" id=\"msform\" >\n                            <div className=\"container d-flex justify-content-center align-items-center\">\n                                <div className=\"card p-3 w-300 mt-5\">\n                                    {\n                                        {\n                                            1: <BasicStep {...props} />,\n                                            2: <Contents {...props} />,\n                                            3: <Funding handleChange={handleChange} values={values} />,\n\n                                        }[step]\n                                    }\n                                    <div className=\"d-flex justify-content-around px-5 mt-5\">\n                                        {step > 1 ? (\n                                            <button className=\"action-button-previous btn-warning\" onClick={prevStep}>\n                                                Back\n                                            </button>\n                                        ) : null}\n                                        <button className=\"action-button btn-warning\" onClick={nextStep}>\n                                            {step === 3 ? \"Submit\" : \"Next\"}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StartACampaign;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/WhatWeDo.jsx",["134","135"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport tumpa from '../images/tumpa.jpeg';\n\n\n\nconst WhatWeDo = () => {\n    const history = useHistory();\n    const [userData, setuserData] = useState({});\n    let data;\n\n    const callWhatWeDoPage = async () => {\n        try {\n            const res = await fetch('/what-we-do', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n\n\n            data = await res.json();\n            console.log(data);\n            setuserData(data);\n            console.log(userData);\n            console.log(userData.email);\n            //console.log(\"what we do \");\n            //console.log(data);\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        callWhatWeDoPage();\n\n    }, []);\n\n    return (\n        <>\n\n\n            <form method=\"GET\">\n                <div className=\"row \">\n                    <div className=\"col-4\">\n\n\n                    </div>\n                    <div className=\"col-6\">\n                        <h5>{userData.email}</h5>\n                    </div>\n\n                </div>\n            </form>\n\n\n\n        </>\n    );\n};\n\nexport default WhatWeDo;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Profile.jsx",["136","137","138","139","140","141"],"import React, { useEffect, useState } from 'react';\nimport {DatePickerComponent} from \"@syncfusion/ej2-react-calendars\";\n\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n\nimport './Profile.css'\n\n\nconst Profile = () => {\n    \n\n\n\n    return (\n        <>\n\n            <div className=\"container border\" id=\"whole\">\n                <div className=\"row justify-content-center\">\n                    <div>\n                        <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\", marginTop: \"40px\" }}\n                            src=\"https://picsum.photos/100\" />\n                    </div>\n                    <form className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <label  className=\"form-label\">Username</label>\n                            <input type=\"text\" className=\"form-control\" />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label for=\"inputEmail4\" className=\"form-label\">Email</label>\n                            <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\n                        </div>\n                        \n                        <div className=\"col-md-6\">\n                            <DatePickerComponent placeholder=\"Birthday (mm/dd/yyyy)\"></DatePickerComponent>\n                        </div>\n                        <div className=\"col-12\">\n                            <label for=\"inputAddress\" className=\"form-label\">Address</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n                        </div>\n                        <div className=\"col-12\">\n                            <label for=\"inputAddress2\" className=\"form-label\">Address 2</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label for=\"inputCity\" className=\"form-label\">City</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\n                        </div>\n                        <div className=\"col-md-4\">\n                            <label for=\"inputState\" className=\"form-label\">Country</label>\n                            <select id=\"inputState\" className=\"form-select\">\n                                <option selected>Choose...</option>\n                                <option>Afghanistan</option>\n                                <option>Albania</option>\n                                <option>Algeria</option>\n                                <option>Andorra</option>\n                                <option>Angola</option>\n                                <option>Antigua and Barbuda</option>\n                                <option>Argentina</option>\n                                <option>Armenia</option>\n                                <option>Australia</option>\n                                <option>Austria</option>\n                                <option>Azerbaijan</option>\n                                <option>Bahamas</option>\n                                <option>Bahrain</option>\n                                <option>Bangladesh</option>\n                                <option>Barbados</option>\n                                <option>Belarus</option>\n                                <option>Belgium</option>\n                                <option>Belize</option>\n                                <option>Benin</option>\n                                <option>Bhutan</option>\n                                <option>Bolivia</option>\n                                <option>Bosnia and Herzegovina</option>\n                                <option>Botswana</option>\n                                <option>Brazil</option>\n                                <option>Britain</option>\n                                <option>Brunei</option>\n                                <option>Bulgaria</option>\n                                <option>Burkina Faso</option>\n                                <option>Burma</option>\n                                <option>Burundi</option>\n                                <option>Cambodia</option>\n                                <option>Cameroon</option>\n                                <option>Canada</option>\n                                <option>Cabo Verde</option>\n                                <option>Central African Republic</option>\n                                <option>Chad</option>\n                            </select>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <label for=\"inputZip\" className=\"form-label\">Zip</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label for=\"inputPassword4\" className=\"form-label\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" />\n                        </div>\n                        \n                        <div className=\"col-auto\">\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n\n\n\n        </>\n    );\n\n}\n\nexport default Profile;","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/CampaignDetails.jsx",["142","143","144","145","146","147"],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/reducer/UseReducer.jsx",[],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/HeroSection.jsx",["148","149"],"import React from 'react';\nimport '../App.css';\nimport './HeroSection.css';\nimport homeimage1 from '../carousel/homeimage1.jpeg';\nimport homeimage2 from '../carousel/homeimage2.jpg';\nimport homeimage3 from '../carousel/homeimage3.jpg';\n\n\nconst HeroSection = () => {\n    return (\n        <div className=\"hero-container\">\n            <img src={homeimage3} className=\"d-block w-100\" alt=\"...\" />\n            <h1>BRING YOUR PROJECT TO LIFE</h1>\n            <p>What are you waiting for?</p>\n        </div>\n        /*  <div id=\"carouselExampleInterval\" className=\"carousel slide hero-container\" data-bs-ride=\"carousel\">\n             <div className=\"carousel-inner\">\n                 <div className=\"carousel-item active\" data-bs-interval=\"1000\">\n                     <img src={homeimage1} className=\"d-block w-100\" alt=\"...\" />\n                 </div>\n                 <div className=\"carousel-item\" data-bs-interval=\"2000\">\n                     <img src={homeimage2} className=\"d-block w-100\" alt=\"...\" />\n                 </div>\n                 <div className=\"carousel-item\">\n                     <img src={homeimage3} className=\"d-block w-100\" alt=\"...\" />\n                 </div>\n             </div>\n             <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\n                 <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                 <span className=\"visually-hidden\">Previous</span>\n             </button>\n             <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\n                 <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                 <span className=\"visually-hidden\">Next</span>\n             </button>\n         </div> */\n    );\n}\n\nexport default HeroSection;\n\n","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/CardView.jsx",["150","151","152"],"import React from 'react';\nimport './StartACampaign.css';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport CampaignDetails from './CampaignDetails';\nconst CardView = (props) => {\n\n\n    return (\n        <div className=\"card\" style={{ \"width\": \"22rem\", height: \"500px\" }}>\n            <img src={props.item.url} className=\"card-img-top\" alt=\"...\" height=\"200px\" />\n            <div className=\"card-body d-flex flex-column\" id=\"card-text\">\n                <div>\n                    <h5 className=\"card-title\">{props.item.ctitle}</h5>\n                    <p>{props.item.ctagline}</p>\n                </div>\n                <div className=\"category\">\n                    <span style={{ color: \"#ff00ff\" }}>{props.item.category}</span>\n\n                </div>\n\n                <div className=\"progress\" id=\"progressbar\">\n                    <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                </div>\n                <a href={\"/camp-details/\" + props.item._id} className=\"btn card-button align-self-end mt-auto\"> View Details</a>\n\n            </div>\n        </div>\n    );\n}\n\nexport default CardView;\n\n","/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/Funding.jsx",[],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/Contents.jsx",[],"/home/tumpa/4_2/web/reactapp/demo1/webProject/crowdfunding/src/components/Steps/BasicStep.jsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"161","line":15,"column":11,"nodeType":"159","messageId":"160","endLine":15,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":45,"column":8,"nodeType":"164","endLine":45,"endColumn":10,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"166","line":9,"column":20,"nodeType":"159","messageId":"160","endLine":9,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":107,"column":45,"nodeType":"169","endLine":107,"endColumn":262},{"ruleId":"157","severity":1,"message":"170","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"171","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"162","severity":1,"message":"172","line":46,"column":8,"nodeType":"164","endLine":46,"endColumn":10,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"174","line":12,"column":9,"nodeType":"159","messageId":"160","endLine":12,"endColumn":15},{"ruleId":"162","severity":1,"message":"175","line":63,"column":8,"nodeType":"164","endLine":63,"endColumn":10,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":100,"column":45,"nodeType":"169","endLine":102,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":188,"column":96,"nodeType":"169","endLine":188,"endColumn":179},{"ruleId":"177","severity":1,"message":"178","line":203,"column":104,"nodeType":"169","endLine":203,"endColumn":187},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"179","line":21,"column":12,"nodeType":"159","messageId":"160","endLine":21,"endColumn":21},{"ruleId":"157","severity":1,"message":"180","line":21,"column":23,"nodeType":"159","messageId":"160","endLine":21,"endColumn":35},{"ruleId":"162","severity":1,"message":"181","line":77,"column":8,"nodeType":"164","endLine":77,"endColumn":10,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"178","line":118,"column":33,"nodeType":"169","endLine":120,"endColumn":35},{"ruleId":"157","severity":1,"message":"183","line":7,"column":13,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"183","line":5,"column":13,"nodeType":"159","messageId":"160","endLine":5,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"183","line":7,"column":13,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"166","line":7,"column":20,"nodeType":"159","messageId":"160","endLine":7,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"184","line":104,"column":120,"nodeType":"159","messageId":"160","endLine":104,"endColumn":132},{"ruleId":"162","severity":1,"message":"185","line":209,"column":8,"nodeType":"164","endLine":209,"endColumn":10,"suggestions":"186"},{"ruleId":"157","severity":1,"message":"187","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"188","line":48,"column":8,"nodeType":"164","endLine":48,"endColumn":10,"suggestions":"189"},{"ruleId":"157","severity":1,"message":"190","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"191","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":17},{"ruleId":"157","severity":1,"message":"192","line":5,"column":19,"nodeType":"159","messageId":"160","endLine":5,"endColumn":29},{"ruleId":"157","severity":1,"message":"193","line":5,"column":31,"nodeType":"159","messageId":"160","endLine":5,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":21,"column":25,"nodeType":"169","endLine":22,"endColumn":63},{"ruleId":"157","severity":1,"message":"194","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":9},{"ruleId":"157","severity":1,"message":"158","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":17},{"ruleId":"157","severity":1,"message":"174","line":13,"column":9,"nodeType":"159","messageId":"160","endLine":13,"endColumn":15},{"ruleId":"162","severity":1,"message":"175","line":65,"column":8,"nodeType":"164","endLine":65,"endColumn":10,"suggestions":"195"},{"ruleId":"177","severity":1,"message":"178","line":122,"column":45,"nodeType":"169","endLine":124,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":210,"column":96,"nodeType":"169","endLine":210,"endColumn":179},{"ruleId":"157","severity":1,"message":"196","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"157","severity":1,"message":"197","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"192","line":3,"column":19,"nodeType":"159","messageId":"160","endLine":3,"endColumn":29},{"ruleId":"157","severity":1,"message":"198","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":23},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callexplorepage'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has a missing dependency: 'callHomePage'. Either include it or remove the dependency array.",["202"],"'expire' is defined but never used.","React Hook useEffect has a missing dependency: 'callcampaigndetails'. Either include it or remove the dependency array.",["203"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'productBy' is assigned a value but never used.","'setProductBy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calluserdataretrive'. Either include it or remove the dependency array.",["204"],"'state' is assigned a value but never used.","'raisedamount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callLoginPage'. Either include it or remove the dependency array.",["205"],"'tumpa' is defined but never used.","React Hook useEffect has a missing dependency: 'callWhatWeDoPage'. Either include it or remove the dependency array.",["206"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'e' is defined but never used.",["207"],"'homeimage1' is defined but never used.","'homeimage2' is defined but never used.","'CampaignDetails' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"212","fix":"220"},"Update the dependencies array to be: [callexplorepage]",{"range":"221","text":"222"},"Update the dependencies array to be: [callHomePage]",{"range":"223","text":"224"},"Update the dependencies array to be: [callcampaigndetails]",{"range":"225","text":"226"},"Update the dependencies array to be: [calluserdataretrive]",{"range":"227","text":"228"},"Update the dependencies array to be: [callLoginPage]",{"range":"229","text":"230"},"Update the dependencies array to be: [callWhatWeDoPage]",{"range":"231","text":"232"},{"range":"233","text":"226"},[942,944],"[callexplorepage]",[1176,1178],"[callHomePage]",[1509,1511],"[callcampaigndetails]",[2185,2187],"[calluserdataretrive]",[5584,5586],"[callLoginPage]",[1206,1208],"[callWhatWeDoPage]",[1582,1584]]